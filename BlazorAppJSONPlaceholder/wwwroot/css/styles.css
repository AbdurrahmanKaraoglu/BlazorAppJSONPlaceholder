/* styles.css */

.user-card {
    background-color: #f0f0f0;
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 10px;
    margin: 10px;
    width: 300px;
    box-shadow: 2px 2px 5px #888888;
}

    .user-card h2 {
        font-size: 1.5rem;
        margin-bottom: 10px;
    }

    .user-card button {
        background-color: #007bff;
        color: #fff;
        border: none;
        padding: 5px 10px;
        border-radius: 3px;
        cursor: pointer;
    }

        .user-card button:hover {
            background-color: #0056b3;
        }


.album-card {
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 10px;
    margin: 10px;
    background-color: #f5f5f5;
}

    .album-card h3 {
        font-size: 18px;
        font-weight: bold;
    }

    .album-card p {
        font-size: 14px;
    }

    .album-card button {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 5px 10px;
        border-radius: 5px;
        cursor: pointer;
    }

        .album-card button:hover {
            background-color: #0056b3;
        }


/* Tablo aralarına yatay çizgi eklemek */
.table {
    border-collapse: collapse;
    width: 100%;
    color: #1C2B2D;
    /*    background-color: #0C356A;*/
}

    .table th, .table td {
        border: 1px solid #ddd;
        padding: 10px;
        text-align: left;
    }

    /* Dikey çizgileri ayarlamak için */
    .table th {
        border-left: 1px solid #e0e0e0;
        border-right: 1px solid #e0e0e0;
    }

    /* Tablonun başlığını stillemek için */
    .table thead {
        color: #ffffff; /* Beyaz renk */
        accent-color: #16a419;
        background-color: #6829d1; /* Mavi renk */
        /*border-bottom: 1px solid #54E346;*/
    }



        .table thead tr:hover {
            /*animation: colorChange 0.2s linear 1s both;*/
            transition-delay: 1.2s;
            background-color: #16a419;
        }

@keyframes colorChange {
    0% {
        background-color: initial;
    }

    100% {
        background-color: #16a419;
    }
}


/* Tablonun hücrelerini zebra çizgili yapmak için */
.table tbody tr:nth-child(odd) {
    background-color: #FF6C22;
}

/* Fare üzerine geldiğinde hücre rengini değiştirmek için */
.table tbody tr:hover {
    transition-delay: 0.4s;
    background-color: #00A9FF;
}


.loading-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100vh; /* Ekran yüksekliği kadar */
    background-color: #38f61b18; /* Hafif bir arka plan rengi */
    position: fixed;
    top: 0;
    left: 250px;
    right: 0;
    bottom: 0;
    z-index: 9999; /* Görünürlüğü diğer öğelerin önünde tutar */
}
/*`.loading-container` sınıfı içindeki parametreleri açıklayalım:

1. `display: flex;`: Flexbox düzenini kullanarak içeriği düzenler. Bu, içeriği yatay ve dikey olarak merkezlemek için yardımcı olur.

2. `flex-direction: column;`: Flex konteynerini sütun yönlü olarak düzenler, yani içerik dikey olarak hizalanır.

3. `justify-content: center;`: Dikey eksende içeriği merkezler. Yani içeriği yatay olarak ortalar.

4. `align-items: center;`: Yatay eksende içeriği merkezler. Yani içeriği dikey olarak ortalar.

5. `height: 100vh;`: `.loading-container`'ın yüksekliğini ekran yüksekliği kadar ayarlar (`vh`, viewport height'ın kısaltmasıdır). Bu, `.loading-container`'ı ekranın tamamını kaplayacak şekilde uzatır.

6. `background-color: rgba(255, 255, 255, 0.8);`: `.loading-container`'ın arka plan rengini beyaz yapar ve hafifçe sayfanın altındaki içeriği görünür kılar. `rgba` (red, green, blue, alpha) kullanarak renk ve opaklık (alpha) ayarları yapabilirsiniz. 0.8, arka planın %80 opak olduğu anlamına gelir.

7. `position: fixed;`: `.loading-container`'ı sayfanın üstünde sabit bir pozisyona kilitler, böylece sayfanın herhangi bir yere kaydırılmasında ekranın ortasında kalır.

8. `top: 0; left: 0; right: 0; bottom: 0;`: `.loading-container`'ı ekranın tamamını kaplayacak şekilde konumlandırır.

9. `z-index: 9999;`: `.loading-container`'ı diğer öğelerin önünde tutmak için `z-index` özelliğini kullanır. 9999 değeri, genellikle yüksek bir değer olarak ayarlanır, böylece yükleniyor ekranı diğer öğelerin üzerine çıkar.

`.loading-message` sınıfı içinde bulunan `color` özelliği, yükleniyor mesajının metin rengini ayarlar. Bu kısım yükleniyor mesajını özelleştirmek için kullanılır.*/

.loading-message {
    color: #2061e8; /* Yükleniyor mesajının yazı rengi */
}

@keyframes fadeIn {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

@keyframes fadeOut {
    0% {
        opacity: 1;
    }

    100% {
        opacity: 0;
    }
}

.loading-message {
    opacity: 0;
    animation: fadeIn 1s forwards;
}


    .loading-message::after {
        content: "";
        animation: typing 3s steps(20) 1s infinite, blink-caret 0.7s step-end infinite;
    }

@keyframes typing {
    from {
        width: 0;
    }

    to {
        width: 100%;
    }
}

@keyframes blink-caret {
    from, to {
        border-color: transparent;
    }

    50% {
        border-color: #000;
    }
}


.text-rainbow-animation {
    font-family: arial black;
    font-size: 70px;
    background-image: linear-gradient(to right, red,orange,yellow,green,blue,indigo,violet, red);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: rainbow-animation 35s linear infinite;
}

@keyframes rainbow-animation {
    to {
        background-position: 4500vh;
    }
}
/* CSS */
/*body {
    padding: 10em 0;
    background: linear-gradient(120deg, #7bc6cc, #be93c5);
}*/

h1 {
    position: relative;
    margin: 0;
    color: #fff;
    font-size: 64px;
    font-family: 'Montserrat', sans-serif;
    font-weight: 400;
    text-align: center;
}

h2 {
    margin: 5em 0 1em;
    color: #fff;
    font-size: 30px;
    text-align: center;
    font-family: 'Montserrat', sans-serif;
    font-weight: 400;
}

/* common */
.loading {
    font-size: 84px;
    font-family: 'Montserrat', sans-serif;
    font-weight: 800;
    text-align: center;
}

    .loading span {
        display: inline-block;
        margin: 0 -0.05em;
    }

/* code #1 */
.loading01 span {
    animation: loading01 1.4s infinite alternate;
    animation-delay: 0s, 0.1s, 0.2s, 0.3s, 0.4s, 0.5s;
}

@keyframes loading01 {
    0% {
        opacity: 1;
    }

    100% {
        opacity: 0;
    }
}

/* code #2 */
.loading02 span {
    animation: loading02 1.2s infinite alternate;
    animation-delay: 0s, 0.2s, 0.4s, 0.6s, 0.8s, 1s;
}

@keyframes loading02 {
    0% {
        filter: blur(0);
        opacity: 1;
    }

    100% {
        filter: blur(5px);
        opacity: 0.2;
    }
}

/* code #3 */
.loading03 span {
    margin: 0 -0.075em;
    animation: loading03 .7s infinite alternate;
    animation-delay: 0s, 0.1s, 0.2s, 0.3s, 0.4s, 0.5s;
}

@keyframes loading03 {
    0% {
        transform: scale(1);
    }

    100% {
        transform: scale(0.8);
    }
}

/* code #4 */
.loading04 span {
    animation: loading04 .7s infinite;
    animation-delay: 0s, 0.1s, 0.2s, 0.3s, 0.4s, 0.5s;
}

@keyframes loading04 {
    0%, 100% {
        transform: translateY(0);
    }

    50% {
        transform: translateY(15px);
    }
}

/* code #5 */
.loading05 span {
    perspective: 1000px;
    transform-origin: 50% 50% -25px;
    transform-style: preserve-3d;
    animation: loading05 1.6s infinite;
    animation-delay: 0s, 0.2s, 0.4s, 0.6s, 0.8s, 1s;
}

@keyframes loading05 {
    0% {
        transform: rotateX(-360deg);
    }

    70% {
        transform: rotateX(0);
    }
}

/* code #6 */
.loading06 span {
    position: relative;
    color: rgba(0, 0, 0, 0.2);
}

    .loading06 span::after {
        position: absolute;
        top: 0;
        left: 0;
        content: attr(data-text);
        color: #fff;
        opacity: 0;
        transform: rotateY(-90deg);
        animation: loading06 4s infinite;
    }

@keyframes loading06 {
    0%, 75%, 100% {
        transform: rotateY(-90deg);
        opacity: 0;
    }

    25%, 50% {
        transform: rotateY(0);
        opacity: 1;
    }
}

/* code #7 */
.loading07 span {
    position: relative;
    color: rgba(0, 0, 0, 0.2);
}

    .loading07 span::after {
        position: absolute;
        top: 0;
        left: 0;
        content: attr(data-text);
        color: #fff;
        opacity: 0;
        transform: scale(1.5);
        animation: loading07 3s infinite;
    }

@keyframes loading07 {
    0%, 75%, 100% {
        transform: scale(1.5);
        opacity: 0;
    }

    25%, 50% {
        transform: scale(1);
        opacity: 1;
    }
}

/* code #8 */
.loading08 span {
    position: relative;
    color: rgba(0, 0, 0, 0.2);
    animation: loading08-parent 5s infinite;
}

    .loading08 span::after {
        position: absolute;
        top: 0;
        left: 0;
        content: attr(data-text);
        color: #fff;
        opacity: 0;
        animation: loading08-child 5s infinite;
    }

    .loading08 span:nth-child(2)::after {
        animation-delay: 0.2s;
    }

    .loading08 span:nth-child(3)::after {
        animation-delay: 0.4s;
    }

loading08 span:nth-child(4)::after {
    animation-delay: 0.6s;
}

loading08 span:nth-child(5)::after {
    animation-delay: 0.8s;
}

loading08 span:nth-child(6)::after {
    animation-delay: 1s;
}

@keyframes loading08-parent {
    0%, 35%, 100% {
        color: rgba(0, 0, 0, 0.2);
    }

    60%, 80% {
        color: #fff;
    }
}

@keyframes loading08-child {
    0% {
        opacity: 1;
    }

    25%, 100% {
        opacity: 0;
    }
}

